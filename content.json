{"meta":{"title":"Kimz Index","subtitle":"Hey whatz up","description":null,"author":"Kim Hsiao","url":"https://poyhsiao.github.io"},"pages":[{"title":"about","date":"2017-06-02T09:49:12.000Z","updated":"2017-06-02T09:49:12.000Z","comments":true,"path":"about/index.html","permalink":"https://poyhsiao.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2017-06-21T06:17:57.000Z","updated":"2017-06-21T06:31:05.000Z","comments":true,"path":"categories/index.html","permalink":"https://poyhsiao.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2017-06-21T06:17:40.000Z","updated":"2017-06-21T06:30:46.000Z","comments":true,"path":"tags/index.html","permalink":"https://poyhsiao.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"多台 Mac 同步系統設定檔","slug":"多台 Mac 同步系統設定檔","date":"2017-11-02T03:40:19.000Z","updated":"2017-11-02T04:09:27.000Z","comments":true,"path":"2017/11/02/多台 Mac 同步系統設定檔/","link":"","permalink":"https://poyhsiao.github.io/2017/11/02/多台 Mac 同步系統設定檔/","excerpt":"","text":"背景通常都是這樣吧，不知何時開始，早就已經習慣使用 Mac 作為主要的開發、使用機，使用 Linux 做為 server 或是次級桌面系統，漸漸也不習慣使用 Windows 的環境了；不過這一點也沒關係，反正有 command line interface (cli) 一點也沒問題，用起來倒是很順手。唯一擔心的，就是多台電腦間，設定檔的同步問題，像是常會遇到的 browser, application setting 等問題，不過有些項目設定起來有點麻煩，所以至少，先同步一些常用的設定檔案目的這次目的也算是很簡單，至少我要先同步 .zshrc (oh-my-zsh), .vimrc (vim) 以及 .ssh (ssh - folder) 等幾個項目，當然方法有幾個，例如，使用 git 之類的服務，或是使用同步檔案的服務，如 dropbox 之類的經過懶人病作祟以及科技始終來自於惰性的座右銘，我決定使用 Dropbox 來同步我的設定檔操作其實與 git 比較起來，操作非常簡單，步驟如下：先在 Dropbox 的同步資料夾中，建立一個準備同步的資料夾；我們先暫稱它為 dotfiles 好了將要準備同步的檔案 / 資料夾先複製到這個要同步的資料夾中 (dotfiles)刪除要同步的檔案 / 資料夾 (必先確定項目已經完成複製，並且已經同步完成)重新把原本的項目 link 回原本項目應該在的位置要注意的部分，為了要避免 unix-like 的系統中，檔案 / 資料夾前面有個 . ，代表是隱藏檔案 / 資料夾，為了確保在不同環境中，都可以看到這些檔案或是資料夾，複製過去 Dropbox 時，還是最好把它另外命名為沒有前面有個 . 的一般正常檔案 / 資料夾例如：123cp -rf ~/.ssh /Users/kimhsiao/Dropbox/dotfiles/sshrm -rf ~/.sshln -sf /Users/kimhsiao/Dropbox/dotfiles/ssh ~/.ssh新電腦操作步驟：12rm -rf ~/.sshln -sf /Users/kimhsiao/Dropbox/dotfiles/ssh ~/.ssh如此一來，就可以開心的在不同電腦中同步你的設定檔了","categories":[{"name":"system","slug":"system","permalink":"https://poyhsiao.github.io/categories/system/"}],"tags":[{"name":"sync","slug":"sync","permalink":"https://poyhsiao.github.io/tags/sync/"},{"name":"dropbox","slug":"dropbox","permalink":"https://poyhsiao.github.io/tags/dropbox/"},{"name":"mac","slug":"mac","permalink":"https://poyhsiao.github.io/tags/mac/"},{"name":"osx","slug":"osx","permalink":"https://poyhsiao.github.io/tags/osx/"}]},{"title":"新鍵盤入手 - Logitech K380","slug":"2017-06-30","date":"2017-06-30T14:30:46.000Z","updated":"2017-06-30T17:48:43.000Z","comments":true,"path":"2017/06/30/2017-06-30/","link":"","permalink":"https://poyhsiao.github.io/2017/06/30/2017-06-30/","excerpt":"背景哈哈，也沒什麼特別原因，就不過是逛了一下 Costco 萬惡的 costco 😄 就順手買了 logitech 的 k380 鍵盤原本只是隨意看看，沒想到觸感出奇地好，而且真的很小，但是每個按鍵大小都跟舒適，另位還支援了 Mac / Windows / ChromeOS / iOS / Android 等，幾乎所有的作業系統平台 別問我有沒有 linux 啊，那個是小事情，反正大部分都是用 ssh 進去，就算是桌面環境要支援，倒也不是件難事 ，最要命的是，竟然只要 699，透過比價網發現，外面都要 799 啊，那當然就順手買啦，又得再提一次，真的是萬惡的 Costco ，沒事真的不要隨意去逛，太危險了！！重點是，回來用起來到底如何吧，話說， logitech 就不用在這裡拍馬屁了，反正本來品質就沒話說，使用起來到底如何呢？！","text":"背景哈哈，也沒什麼特別原因，就不過是逛了一下 Costco 萬惡的 costco 😄 就順手買了 logitech 的 k380 鍵盤原本只是隨意看看，沒想到觸感出奇地好，而且真的很小，但是每個按鍵大小都跟舒適，另位還支援了 Mac / Windows / ChromeOS / iOS / Android 等，幾乎所有的作業系統平台 別問我有沒有 linux 啊，那個是小事情，反正大部分都是用 ssh 進去，就算是桌面環境要支援，倒也不是件難事 ，最要命的是，竟然只要 699，透過比價網發現，外面都要 799 啊，那當然就順手買啦，又得再提一次，真的是萬惡的 Costco ，沒事真的不要隨意去逛，太危險了！！重點是，回來用起來到底如何吧，話說， logitech 就不用在這裡拍馬屁了，反正本來品質就沒話說，使用起來到底如何呢？！為什麼要賣這隻 K380 呢？未來因為工作需要，可能會遇到需要操作不同系統的環境，但是每個平台的鍵盤都不同，每次要習慣操作都需要浪費很多時間，整體的工作效率會明顯降低；所以，選擇一個好的鍵盤，是基本的維持工作成效的一個投資會運用到藍牙鍵盤的機率不是這麼高，但是，一旦需要時，成本卻不低。現在的電視盒幾乎都是 andorid 系統的，如果想要在電視盒上做進階的操作，使用一般的 USB 鍵盤在機動性和操作性，都比使用藍牙鍵盤麻煩多了。所以外出選擇藍牙鍵盤，會比選擇 USB 鍵盤更有競爭力K380 的大小以及重量適中，要攜帶出去並不費力。與其使用其他人的鍵盤，用自己習慣的工具，會更容易事半功倍優點按鍵的觸感和比例大小真的很棒，完全沒有什麼按起來會有不順手的地方一次可以支援三套裝置。手邊沒有這麼多套作業系統可以玩，目前只用另外一台 iPhone 和 android 手機，就順便試試了，其實連線操作都很順手，而且切換也挺方便的根據官方說法，電池可以使用兩年。我是不知道啦，反正才剛開始使用，真的要用到沒電才能說到底可以用多久囉價錢真的算是蠻實惠的。雖說沒有必要非用藍牙鍵盤或是外接鍵盤不可 畢竟目前其實幾乎都是使用筆電，很少使用到桌機，不過想到這樣的大小，這樣的待機水平，其實是可以到處使用的對於 Mac 的使用者來說，真的算貼心的。畢竟她的 command 鍵和 alt / option 鍵都是在熟悉的地方，不需要考慮像是購買一般的鍵盤，都是主要設計給 Windows 用戶使用的，所以，control、Win 鍵都沒問題，但是，拿到 Mac 上面使用，就會覺得一整個不順手對於習慣使用 Mac 的筆電使用者來說，應該很習慣鍵盤上面沒有 del 這個鍵吧，要使用 del 功能，就是 fn + back 鍵囉，習慣也還好，只是就覺得有點可惜。不過 K380 把 del 鍵加回去了，所以對於 Windows 使用者來說是很應該的，不過對於 Mac 使用者來說，可就是加分啦不過，當然還是得說一下可惜的地方缺點fn 和 control 這兩個鍵，對於 Mac 使用者來說，剛好是相反的。也就是，一般的 Mac 鍵盤的 fn 鍵，是在最左下角，再來才是 control 鍵，這部分，可能是為了給 Windows 用戶習慣吧，這方面我沒有太想知道，也懶得查了鍵盤後方沒辦法在墊高一點。其實 K380 已經算是非常貼心了，本身已經在背後做了防滑墊，鍵盤也有個基本的角度，已經算是很符合人體工學了。不過，少了個可以再站立的腳架，不免還是有點可惜鍵盤不是純英文鍵盤。其實這也不太算是缺點啦，反正在台灣賣的鍵盤，要真的完全沒有 ㄅㄆㄇ 或是乾淨沒有倉頡字碼的鍵盤，真的不是這麼容易找，而且又在 Costco 買的，其實能選擇的更是少，但是還是得說一下，因為 K380 實在是貼心到爆炸，他除了有注音、倉頡，甚至還有另外一個不太確定是大易還是無蝦米的字根在上面 到底是什麼，我也懶得查，反正根本用不到，所以，小小乾淨簡潔的設計，因為在每個鍵上面，都添加了四種符號，看起來真的有點破壞美感，算是小小可惜沒有手持裝置的立架。這也不算是個缺點，因為本來就有個 K480 啊，他就是有立架的那種；只是，既然是可以支援手持裝置，沒有立架，在使用上是有點不這麼方便；如果可以簡單的拖拉出一個小地盤，那就太棒棒了整體來說，真的算是個很棒、很超值的藍牙鍵盤問題好的，其實真的沒有什麼問題好說的，操作起來完全不會覺得彆扭。只不過，哪有這麼開心的，對於我來說， fn 和 control 兩個鍵的位置不同，其實並不會太困擾我，畢竟使用的機率也沒有這麼多，反正之後都會用 K380 當作我習慣使用的鍵盤，但是，另一個問題，反而是比較重要的…鎖定 Macbook 家族 notebook 的螢幕好啦，我相信，沒有這麼多人回有這方面的困擾，畢竟可以使用滑鼠移往熱點的方式達成。但是，習慣使用鍵盤的來說，多點擊幾次滑鼠，或是手離開鍵盤這件事，就是一件中斷操作與思考的一個行為；就連螢幕上鎖這件事情也是一樣。而且，滑鼠位置移往熱點來說，真的會不小心觸及到，又會再次中斷工作與思路原本鎖定螢幕的方式很簡單：有光碟機的版本1&lt;command&gt; + &lt;shift&gt; + &lt;eject&gt;新一代的系統，沒有光碟機的版本1&lt;command&gt; + &lt;shift&gt; + &lt;power&gt;好啦，遇到 K380 就沒輒啦，畢竟鍵盤上面沒有 eject 或是 power 鍵，想要鎖螢幕就不容易了吧！！還好在 Mac 中，總是有辦法解決 就跟 linux 一樣，因為 Mac 有一個內建的小機器人 Automator ，這個東西真的是佛心來的，只要覺得 Mac 在哪方面用起來不是這麼順手，想要有更好的操作經驗，這個 Automator 提供了簡易的圖形化介面，或是高級的 applescript 方式，就可以很簡單的幫助你了。至於 Automator 的操作介紹，以及 Applescript 的語法，完全不是我們要介紹的重點，這次只想要分享，如何讓 Mac 也可以使用類似於 Windows 使用 Win + L 的方式，鎖定螢幕自行設定替代的螢幕鎖定方式原文可以參考 這裡 的最佳解說明但是項目太複雜了，而且還會在狀態列上面多一個圖示，對於螢幕本來就不大，而且已經有很多圖示在上面的我來說，怎麼看怎麼不開心，所以就使用了其他方式開啟 Automator新增一個 服務新增一個 Applescript拖曳項目到右邊的流程服務接收：選擇 沒有輸入項目script 內容填入：1tell application \"Finder\" to sleep存檔，可以考慮設為檔名「Lock screen」前往 系統偏好設定選擇 鍵盤 -&gt; 快速鍵 -&gt; 服務找到並勾選剛才設定的服務名稱 以 Lock Screen 為例點選項目右邊的，設定快速鍵設定好快速鍵後，就完成新的螢幕鎖定功能了，也可以使用喜歡的螢幕鎖定快速鍵方式，在 K380 上開心的使用螢幕鎖定的功能了","categories":[{"name":"life","slug":"life","permalink":"https://poyhsiao.github.io/categories/life/"}],"tags":[{"name":"logitech","slug":"logitech","permalink":"https://poyhsiao.github.io/tags/logitech/"},{"name":"bluetooth","slug":"bluetooth","permalink":"https://poyhsiao.github.io/tags/bluetooth/"},{"name":"costco","slug":"costco","permalink":"https://poyhsiao.github.io/tags/costco/"},{"name":"applescript","slug":"applescript","permalink":"https://poyhsiao.github.io/tags/applescript/"}]},{"title":"想要做一個簡單的書籤管理平台","slug":"2017-06-26-1","date":"2017-06-26T04:53:07.000Z","updated":"2017-06-26T05:15:59.000Z","comments":true,"path":"2017/06/26/2017-06-26-1/","link":"","permalink":"https://poyhsiao.github.io/2017/06/26/2017-06-26-1/","excerpt":"起源其實早就覺得目前的書籤管理工具都不太好，然而，每次使用 evernote 或是 onenote 都覺得綁手綁腳，真的想要有個簡單的管理書籤的平台，該倒的也差不多都倒光了，好吧，那就乾脆自己動手做一個吧","text":"起源其實早就覺得目前的書籤管理工具都不太好，然而，每次使用 evernote 或是 onenote 都覺得綁手綁腳，真的想要有個簡單的管理書籤的平台，該倒的也差不多都倒光了，好吧，那就乾脆自己動手做一個吧功能目前想到的功能應該有以下幾個：快速放入網址建立書籤項目可以自訂 title、說明、tags 等項目（選填）呈現方式回有簡單的網頁內容（類似於 evernote 的 clearly 模式）具有搜尋功能，可以搜尋: 網址、title、說明、標籤、簡單網頁內容可以分享出去（系統自動產生網址）搜尋結果，可以匯出成 html、json 格式可以完整匯出、匯入和備份基本還是要有會員概念目前想到的大概就是這些項目，未來應該要有的功能應該可以增加：appbrowser extension項目分析等的後台功能平台化、交流等的功能基本的想法大概就是這樣吧，我想困難度不高，期待可以快速完成，順便熟悉一些新技術。未來可能第一版完成後，會先丟一版作為 open source projectAnyway, good luck","categories":[{"name":"project","slug":"project","permalink":"https://poyhsiao.github.io/categories/project/"}],"tags":[{"name":"bookmark","slug":"bookmark","permalink":"https://poyhsiao.github.io/tags/bookmark/"},{"name":"evernote","slug":"evernote","permalink":"https://poyhsiao.github.io/tags/evernote/"},{"name":"onenote","slug":"onenote","permalink":"https://poyhsiao.github.io/tags/onenote/"},{"name":"sharing","slug":"sharing","permalink":"https://poyhsiao.github.io/tags/sharing/"},{"name":"export","slug":"export","permalink":"https://poyhsiao.github.io/tags/export/"},{"name":"html","slug":"html","permalink":"https://poyhsiao.github.io/tags/html/"},{"name":"json","slug":"json","permalink":"https://poyhsiao.github.io/tags/json/"}]},{"title":"有了 git hooks 其實已經解決了大部分的工作","slug":"2017-06-26","date":"2017-06-25T16:00:29.000Z","updated":"2017-06-25T16:48:14.000Z","comments":true,"path":"2017/06/26/2017-06-26/","link":"","permalink":"https://poyhsiao.github.io/2017/06/26/2017-06-26/","excerpt":"","text":"這幾天一直在想，其實 hexo 已經超級方便了，反正可以開心的寫作，也可以輕鬆地維護控管版本但是，總是覺得不是這麼順手，畢竟，好像每次寫完文章後，就讓他自動 deploy 到遠端服務上，當然是件很簡單的事情。不過，大部分時候，就是因為這麼簡單，所以根本忘記要 commit 甚至 push 上去所以就開始胡思亂想啦，是不是應該用 CI continues integration 的方式，甚至可以 CD continues delivery 當然，有沒有達成這麼完美的目的倒是未必，更重要的概念，是可以盡量畢其功於一役所以，可以考慮執行的方式有以下幾點：寫個 script，在 deploy 之前，先 commit code12345$ ./bin/deploy.sh#... 要先做一大堆事情，如 git add 等等一大堆$ git commit先 commit code，然後再 deploy 相關的 code12345# ... 先做一大堆事情$ git commit$ ./bin/deploy.sh乾脆把這些事情丟到 jenkins 上面幫忙以上幾點來看，第三點算是真的殺雞用牛刀了，不但要有一個 jenkins 的服務，還要寫一些 script，甚至想說從 A git repository 到 B (github.io ?) 這種動作，真的有違常理。所以用 jenkins 真的不太直覺方便再來，先 commit 再 deploy，這部分來說，其實對於 hexo 來說，deploy 其實是包括了 generate -&gt; deploy ，所以萬一 generate code 時，有發生任何錯誤，那也就是改壞了、有 bug 了。這樣的 commit 似乎也不好所以，比較好的概念應該是類似於第一種。先 generate code，如果沒問題的話，就 commit，如果有問題，那就該啊～～因此，應該考慮使用第一種方式，就是先 generate code，再 commit code 吧。不過（世上就是這麼多，不過…）這樣還是有點麻煩，畢竟正如同前面所提到的，如果要我打這麼多 command，那麼就一點也不符合懶的原則了經過幾個小時偷玩 Jenkins 後，順便 Google 了一下，其實是可以考慮使用 [git hooks] 的功能原本還以為是什麼外掛呢，原來他早就已經存在於 .git 的資料夾中，這要簡單的修改就可以使用了，而且是最簡單的 shell script 而已，只要吧 *.sample 後面的 sample 副檔名，就可以直接使用啦先說一下我的想法和做法吧：commit 前，就先讓 hexo generate html 吧，順便看看有沒有問題commit codecommit 後，就直接把剛才 generate 出來的 html，deploy 到指定的目的地吧既然概念這麼簡單，就直接說要怎麼做了修改一下 ./git/hooks/pre-commit.sample123#!/bin/shexec ./bin/generate.sh重新修改檔名，把後面的 .sample 拿掉，就會變成 pre-commit 這個檔名。待會 commit code 之前，就會自動執行剛才所執行的 generate.sh 這個 script 啦另一部分，也可以有 post-commit 這個檔案，就是 commit 完成後要執行的動作，如果沒有這個檔案，那就手動生一個吧其他還有不同的功能和處罰時機不同的功能如此一來，我就可以在 commit code 完成後，不但產生了目的的 html ，又可以在 commit 完成後，直接 deploy html 頁面到目標的地方這麼說來，除了需要在檢視是否功能有誤時，無法直接操作外，其他的部分，就可以全自動把 code commit，又可以達成 deploy 的目標。真的算是一舉數得啊！！相關 git hooks 資料，可以看看 這裡","categories":[{"name":"tech","slug":"tech","permalink":"https://poyhsiao.github.io/categories/tech/"}],"tags":[{"name":"git","slug":"git","permalink":"https://poyhsiao.github.io/tags/git/"},{"name":"deploy","slug":"deploy","permalink":"https://poyhsiao.github.io/tags/deploy/"},{"name":"jenkins","slug":"jenkins","permalink":"https://poyhsiao.github.io/tags/jenkins/"},{"name":"ci","slug":"ci","permalink":"https://poyhsiao.github.io/tags/ci/"},{"name":"cd","slug":"cd","permalink":"https://poyhsiao.github.io/tags/cd/"}]},{"title":"使用 js 建構機器學習核心","slug":"2017-06-23","date":"2017-06-23T01:28:41.000Z","updated":"2017-06-23T03:31:02.000Z","comments":true,"path":"2017/06/23/2017-06-23/","link":"","permalink":"https://poyhsiao.github.io/2017/06/23/2017-06-23/","excerpt":"","text":"Evernote link: here","categories":[{"name":"參考","slug":"參考","permalink":"https://poyhsiao.github.io/categories/參考/"},{"name":"學習","slug":"參考/學習","permalink":"https://poyhsiao.github.io/categories/參考/學習/"},{"name":"範例","slug":"參考/學習/範例","permalink":"https://poyhsiao.github.io/categories/參考/學習/範例/"},{"name":"evernote","slug":"參考/學習/範例/evernote","permalink":"https://poyhsiao.github.io/categories/參考/學習/範例/evernote/"}],"tags":[{"name":"js","slug":"js","permalink":"https://poyhsiao.github.io/tags/js/"},{"name":"machine learning","slug":"machine-learning","permalink":"https://poyhsiao.github.io/tags/machine-learning/"}]},{"title":"成長就是先遇到阻礙","slug":"2017-06-22","date":"2017-06-22T09:58:47.000Z","updated":"2017-06-22T10:35:41.000Z","comments":true,"path":"2017/06/22/2017-06-22/","link":"","permalink":"https://poyhsiao.github.io/2017/06/22/2017-06-22/","excerpt":"","text":"這應該算是一直以來的常態了，只要專心一致想要做一件事情，就會開始有些小的阻礙，例如：活動邀約變多平常沒什麼人在理的，可以專心做些事情，但是一旦下定決心做些事情時，就會開始有很多人找，不見得是壞事，但是，就是會把原本規劃好的時程打亂設備開始出現問題這也是常見的問題與影響，概念就是，很多原本根本沒想到會出問題的軟、硬件，會出現不可期望的問題想太多、規劃太複雜、動作太慢這可能是強迫症的症狀吧，只要有新項目出現，就會想要規劃一個很完整的系統，反而讓整個行程時間變得難以掌控行為項目發散這種問題，應該與上述的問題相類似，會因為中間遇到問題，就會分神去解決，以為要完成主要的項目，必須先解決其中這些問題，然而，很多時候，其實這些問題根本沒有這麼重要，而是應該先有個折衷，為達目的先不擇手段是的，最近準備開始的新專案，又是開始遇到這樣的問題，這些項目，幾乎都不是別人造成的問題，而是自己的問題。因為會遇到這些項目的阻礙，所以時常就會讓項目胎死腹中，而根本還沒開始執行，或是連雛形都還沒完成就結束了。所以，是該好好調整自己，把心靜下來，好好想清楚目標、項目、施行步驟才是，有想法就應該挽起袖子好好執行，就如同最近看到很棒的演說分享，也跟大家分享一下！！影片連結原文連結","categories":[{"name":"life","slug":"life","permalink":"https://poyhsiao.github.io/categories/life/"}],"tags":[{"name":"life","slug":"life","permalink":"https://poyhsiao.github.io/tags/life/"}]},{"title":"項目最佳化","slug":"2017-06-21","date":"2017-06-21T09:38:44.000Z","updated":"2017-06-21T10:00:48.000Z","comments":true,"path":"2017/06/21/2017-06-21/","link":"","permalink":"https://poyhsiao.github.io/2017/06/21/2017-06-21/","excerpt":"倒也不算是什麼了不起的調整，反正靜態網頁就是要越最佳化越好嘛，例如圖片要更小一點html 有多難讀就多難讀js 能多小就多小，code 越簡單越好這樣，才可以加快讀取速度嘛","text":"倒也不算是什麼了不起的調整，反正靜態網頁就是要越最佳化越好嘛，例如圖片要更小一點html 有多難讀就多難讀js 能多小就多小，code 越簡單越好這樣，才可以加快讀取速度嘛所以，這次也把我的 hexo 更小化了一點，另外把原本消失的 categories 和 tags 頁面也產出了 (ps. 我是參考 這裡 啦) 別問我 about 頁面如何，反正現在還沒想到要怎麼弄，先不管了...當然另外，為了有更好的 RWD 效果，也做了小小的修改，總之，在手機上可不能太難看啊，畢竟手機用戶才是大宗至於分享的部分，當然就簡單實用 shareaholic 囉，先求有再求好，跟何況已經夠好了，暫時不需要調整了也就是說，這個 blog 暫時功能也算是完成了！！","categories":[{"name":"html","slug":"html","permalink":"https://poyhsiao.github.io/categories/html/"},{"name":"hexo","slug":"html/hexo","permalink":"https://poyhsiao.github.io/categories/html/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://poyhsiao.github.io/tags/hexo/"},{"name":"js","slug":"js","permalink":"https://poyhsiao.github.io/tags/js/"},{"name":"html","slug":"html","permalink":"https://poyhsiao.github.io/tags/html/"},{"name":"optimize","slug":"optimize","permalink":"https://poyhsiao.github.io/tags/optimize/"},{"name":"css","slug":"css","permalink":"https://poyhsiao.github.io/tags/css/"},{"name":"RWD","slug":"RWD","permalink":"https://poyhsiao.github.io/tags/RWD/"}]},{"title":"偷看程式碼真的有很大的益處","slug":"2017-06-20-1","date":"2017-06-20T10:08:03.000Z","updated":"2017-06-21T09:54:35.000Z","comments":true,"path":"2017/06/20/2017-06-20-1/","link":"","permalink":"https://poyhsiao.github.io/2017/06/20/2017-06-20-1/","excerpt":"應該大家都知道 hexo 了吧，倒也不是什麼新的、了不起的新應用技術了，總之，我也是這幾天才開始玩其中的原因不外有以下五點：是該開始寫點東西了，每次都會忘記紀錄些項目，就連 evernote 上的東西也越來越少翻出來看了使用 Markdown 語言寫東西，是感覺更像是在寫簡單的文字，純文字的寫法，跟讓人有感越來越懶得去架設一些服務，雖然一開始概念都是練習技術，但是很多時候都半途而廢，或是機器調整後，就沒有再也不想維護了MWeb 真的超好用的，又美觀、又方便、又支援各種 blog 和圖床的功能，有在寫 Markdown 的夥伴們，一定要花點錢買套正版的來玩玩喔 這也是為什麼用 linux / windows 很不舒服的原因之一總是要留點東西下來，FB / instagram 或是其他的 social network 平台都很好，但是說要真的留下、查看東西都很困難，除了可以彌補一下空虛心靈討拍拍以外，就沒有什麼太大的需求了… 也是時間該戒 FB 的時候了好啦，言歸正傳，這次到底有什麼收穫，先不說要怎麼安裝 hexo 或是有什麼特別的外掛了","text":"應該大家都知道 hexo 了吧，倒也不是什麼新的、了不起的新應用技術了，總之，我也是這幾天才開始玩其中的原因不外有以下五點：是該開始寫點東西了，每次都會忘記紀錄些項目，就連 evernote 上的東西也越來越少翻出來看了使用 Markdown 語言寫東西，是感覺更像是在寫簡單的文字，純文字的寫法，跟讓人有感越來越懶得去架設一些服務，雖然一開始概念都是練習技術，但是很多時候都半途而廢，或是機器調整後，就沒有再也不想維護了MWeb 真的超好用的，又美觀、又方便、又支援各種 blog 和圖床的功能，有在寫 Markdown 的夥伴們，一定要花點錢買套正版的來玩玩喔 這也是為什麼用 linux / windows 很不舒服的原因之一總是要留點東西下來，FB / instagram 或是其他的 social network 平台都很好，但是說要真的留下、查看東西都很困難，除了可以彌補一下空虛心靈討拍拍以外，就沒有什麼太大的需求了… 也是時間該戒 FB 的時候了好啦，言歸正傳，這次到底有什麼收穫，先不說要怎麼安裝 hexo 或是有什麼特別的外掛了這次的學習來源是因為一個佈景主題啟發的，這個佈景主題就是 hiero，挑選他的原因，也不過就是看起來很清爽，感覺也挺符合一般檢視的 fu 啦看起來挺清爽的吧不過，真的發現趣味的是，在設定 _config.yml 時發現的…一下找到了對岸的許多網站分析、統計相關的服務，重點是，其實作者都整理分析的挺好的…項目Social network linksGithubWeiboTwitterFacebookG+InstagramPinterestFlickr聯絡 Email這些都可以設為自己相關的 social network links，當然，你要自己再另外加也可以Discussion (Guest book)网易云跟贴多說 好像已經失效了Disquslivere 中文翻譯為來必力，似乎是個韓國來的服務uyanwumiiWebmaster (站長工具)Google webmaster百度 站長平台360 站長平台網站分析工具Google Analytics GAGauges 七天免費試用百度统计腾讯分析不蒜子 極簡網頁計數器，免註冊其他CNZZ 數據專家，很優秀的網站瀏覽分析平台結論現在網路這麼發達，想要擁有一些網站統計、觀察的工具非常多，不過，如果想要進軍大陸市場是，很多項目無法使用，也就是，其實都得使用大陸市場的工具，以目前看來，這幾個項目，是進軍大陸互聯網 (尤其是傳統網站) 來說，最基本的幾個項目別說的好像是在台灣的 SEO 做的多好，網站分析的多透徹，甚至社群行銷的多優秀，如果沒有了 Google, FB 這些工具，其實到了中國大陸，可能都無法負荷當地市場所需再次重申一次，根據台灣目前所剩無幾的資源以及優勢，對於大陸還是有這麼一點點的小小利多，如果沒有好好把握住最後的一點點機會，那真的未來什麼都沒了，無論是技術以及文化，都必須要更加緊密合作才可以走出困境！！","categories":[{"name":"life","slug":"life","permalink":"https://poyhsiao.github.io/categories/life/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://poyhsiao.github.io/tags/hexo/"},{"name":"markdown","slug":"markdown","permalink":"https://poyhsiao.github.io/tags/markdown/"},{"name":"mweb","slug":"mweb","permalink":"https://poyhsiao.github.io/tags/mweb/"}]},{"title":"很久沒有用 windows 了","slug":"2017-06-20","date":"2017-06-20T04:02:10.000Z","updated":"2017-06-20T05:23:25.000Z","comments":true,"path":"2017/06/20/2017-06-20/","link":"","permalink":"https://poyhsiao.github.io/2017/06/20/2017-06-20/","excerpt":"","text":"很久沒有用 windows 了也不知道到底有多久沒有用 windows，大約是 win7 之後，就不熟悉了最近拿到一台 NB，原本想說安裝 mint linux 來寫程式就好了，不過發現，相對於 Mac OSX 來說，其實 Linux 沒什麼質量比較高的軟件。例如，想要有個好用的 Markdown editor，就沒有像是 Mac 的 MWeb 合理與好用…另外，習慣使用的拼音輸入（繁體），也不像是 Mac 本身就已經內建了 話說，好像 windows 也沒有內建，不過至少可以使用 google 拼音輸入法所以這兩天也就索性把 linux 重新安裝回 windows 吧，沒想到很快就出現另人懷念的畫面了好啦，我也完全不想看懂這是什麼我想最麻煩的應該會是以下幾個部分了安裝 driver 有電腦、有 windows 10 就很迷人了，其他不強求windows update 無盡的等待鍵盤位置 這可能是短期之內，無論是使用任何作業系統，只要遇到鍵盤就會發生不習慣的問題其他快速鍵習慣操作與設定anyway，祝我好運吧，真不知道要適應多久了！！","categories":[],"tags":[]},{"title":"測試文章","slug":"2017-06-02","date":"2017-06-02T09:50:20.000Z","updated":"2017-06-25T16:00:29.000Z","comments":true,"path":"2017/06/02/2017-06-02/","link":"","permalink":"https://poyhsiao.github.io/2017/06/02/2017-06-02/","excerpt":"","text":"這是一篇測試文章就是測試別介意啊！！","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-06-02T08:11:45.000Z","updated":"2017-06-02T08:11:45.000Z","comments":true,"path":"2017/06/02/hello-world/","link":"","permalink":"https://poyhsiao.github.io/2017/06/02/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new \"My New Post\"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment","categories":[],"tags":[]}]}